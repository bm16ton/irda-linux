#!/bin/bash

. /etc/default/irda-utils

test "$AUTOMATIC" = "true" || exit 0

test -d /sys/bus/pnp/devices || exit 0

cd /sys/bus/pnp/devices

IRDA=0
STATEFILE=/run/irdadev

case $1 in
    start|restart|reload|force-reload)
    for x in *; do
	FIR="false";
	SIR="false";
	FALLBACK=true;
	OPTIONS=""
	for y in `cat $x/id`; do
	    case "$y" in
		PNP0510|PNP0511)
		SIR="true";
		;;
		NSC*)
		FIR="nsc-ircc";
		;;
		IBM0071)
		FIR="nsc-ircc";
		OPTIONS="dongle_id=0x09";
		;;
		SMC*)
		FIR="smsc-ircc2";
		;;	    
		ALI5123)
		FIR="ali-ircc";
		;;
		VIA3076)
		FIR="via-ircc"
	    esac
	done

	if [ $FIR = "false" -a $SIR = "false" ]; then
		continue;
	fi
	
    # Work out resource ranges, so we know which serial port to work with
	PORTS=`grep io $x/resources | sed -e 's/io \(.*\)-.*/\1/'`
	for PORT in $PORTS; do
		case $PORT in
	    	0x3f8)
	    	PORT="/dev/ttyS0"
		break;
	    	;;
	    	0x2f8)
	    	PORT="/dev/ttyS1"
		break;
	    	;;
	    	0x3e8)
	    	PORT="/dev/ttyS2"
	    	break;
		;;
	    	0x2e8)
	    	PORT="/dev/ttyS3"
	    	break;
		;;
	    	default)
	    	PORT="UNKNOWN"
	    	;;
		esac;
	done

	if [ "$FIR" != "false" ]; then
	    # The BIOS doesn't always activate the device. Prod it
	    echo disable >$x/resources;
	    echo activate >$x/resources;

	    UART="unknown";
	    if [ "$PORT" != "UNKNOWN" ]; then
	    # We should attempt to disable the UART. However, we need to store
	    # it - there's a chance that things could still go horribly wrong
		UART=`setserial $PORT | sed 's/.*UART: \(.*\), Port.*/\1/'`
		setserial $PORT uart none
	    fi
	    modprobe $FIR $OPTIONS;
	    if [ "$?" = "0" ]; then
		echo "irda$IRDA fir" >$STATEFILE;
		let "IRDA=$IRDA+1";
		continue;
	    else
	    # Try to recover
		if [ "$UART" != "undefined" ]; then
			setserial $PORT uart $UART;
		fi
	    fi
	fi
	
	if [ "$SIR" = "true" -o "$FIR" != "false" ]; then
	    # We'll only have got here if the FIR module has failed

	    if [ "$PORT" != "UNKNOWN" ]; then
	    # The BIOS doesn't always activate the device. Prod it
		echo disable >$x/resources;
		echo activate >$x/resources;

	    # The IRQ is not always set correctly, so try to deal with that
		IRQ=`grep irq $x/resources | sed -e 's/irq \(.*\)/\1/'`
		setserial $PORT irq $IRQ;
		echo "$PORT sir" >$STATEFILE;
	    fi
	fi
    done
    ;;
    stop)
    exit 0
    ;;
esac
